#!/bin/bash
# Script to sync && upgrade Gentoo portage
configPath="/usr/lib"
if [ -f "${configPath}/shell-text.cnf" ]; then
	source "${configPath}/shell-text.cnf"
fi

# functions
set_param () {
	case "$1" in
	 's'|'sync')
		[ $2 -eq 0 ] && SYNC=0 || SYNC=1
		;;
	 'q'|'quiet')
		[ $2 -eq 0 ] && QUIET=0 || QUIET=1
		;;
	 'v'|'verbose')
		[ $2 -eq 0 ] && VERBOSE=0 || VERBOSE=1
		;;
	 'x')
		[ $2 -eq 0 ] && X=0 || X=1
		;;

	 *)
		echo -e "${red}An error occurred while setting parameters${normal}"
		return 1
		;;
	esac
return 0
}

# init
SET='@world'
set_param 'x' 0
set_param 'q' 0
set_param 'v' 0
set_param 's' 1

# get parameters
while [ "$#" -gt 0 ]; do
	case "$1" in
          "-h"|"--help")
                # HELP
                help=$( cat << HELP
${bold}Script for upgrading Gentoo${normal}
Usage : ${Blue}upgrade${normal} [${Green}OPTIONS${normal}] [${Green}@SET${normal}]

${Green}OPTIONS${normal} :
        ${bold}-h|--help${normal}	Print this help and exit
        ${bold}-q|--quiet${normal}    	Run quietly
        ${bold}-v|--verbose${normal}    Run verbosely
        ${bold}-x${normal}    Run graphically

${Green}SET${normal} :
	Set to upgrade, if not set ${green}@world${normal} will be used

HELP
)
                echo -e "$help"
                exit 0
                ;;

	 @*)
		SET=$1
		;;

	 '-x')
		set_param 'x' 1 && set_param 'q' 1 && set_param 'v' 0 && break || exit 255
		;;
	 '-q'|'--quiet')
		set_param 'q' 1 || exit 255
		;;
	 '-v'|'--verbose')
		set_param 'v' 1 || exit 255
		;;

	 '-qv'|'-vq')
		set_param 'q' 1 && set_param 'v' 1 || exit 255
		;;

	 *)
		echo -e "${red}Unknown parameter ${1}${normal}, exiting..." && exit 255
		;;
	esac
	shift
done

# get repos locations
repos=( $( grep location /etc/portage/repos.conf/* | cut -d '=' -f2 ) )

# search for last sync timestamps
last=0
text="Checking repositories..."
[ $X -eq 0 ] && echo -e "${green}${text}${normal}" || echo "# ${text}"
for i in "${!repos[@]}"; do
	if [ -f "${repos[$i]}/Manifest" ]; then
		time[$i]=$( date -d `grep TIMESTAMP "${repos[$i]}/Manifest" | cut -d ' ' -f2` "+%s" )
		if [ ${time[$i]} -gt `date '+%s'` ]; then
			text1="Sync date for ${repos[$i]##*/} is newer than now"
			text2=", please correct your local time"
			[ $X -eq 0 ] &&	echo -e "${red}${text1}${normal}${text2}" || zenity --width=500 --error --title "Time error" --text "<span color=\"red\">${text1}</span>${text2}"
			echo "Exiting..."
			exit 1
		fi

		[ $QUIET -gt 0 ] && [ $VERBOSE -eq 0 ] || echo "Last sync for ${repos[$i]##*/} is `date -d @${time[$i]}`"
	else
		[ $VERBOSE -eq 0 ] || echo "Unknown last sync for ${repos[$i]##*/}"
	fi
done
for i in "${!time[@]}"; do
	if [ ${time[$i]} -gt $last ]; then
		last=${time[$i]}
	fi
done

# + 1 day
((last+=86400))
now=$(date "+%s")
# less than 1 day
if [ $now -lt $last ]; then

	text1="Your last sync is newer than 1 day"
	text2="Do you want to sync again ?"
	text3="-->" 

	if [ $X -eq 0 ]; then
		echo "${bold}${text1}${normal}. ${text2} (y/N)"
		while true;	do

			read -p "${text3}" ans

			case "$ans" in
				[nN]*|'')
					SYNC=0
					break 2
					;;

				[yY]*)
					break 2
					;;

				*)
					echo "Unknown answer (y/N ?)"
					;;

			esac
		done
	else
		if zenity --width=300 --question --title "${text1}" --text "${text2}" --default-cancel; then
			SYNC=1
		else SYNC=0
		fi
	fi
fi

# sync
if [ $SYNC -gt 0 ]; then
	text="Syncing repositories..."
	if [ $X -eq 0 ]; then
		echo -e "${green}${text}${normal}"
		emerge --sync
	else
		(
			sudo -A emerge --sync > /tmp/upgrade-portage.log &
			pid=$!

			while [[ $(pidof emerge) = $pid ]]; do
				sleep .5
				echo `tail -f -n 1 /var/log/emerge.log | sed 's/\(.*\)/# \1/'`
			done
		) | zenity --progress --width=500 --title "${text}" --pulsate --text ""
	fi
	[ $? -gt 0 ] && exit 2
fi

# upgrade

text="Checking for upgrades..."
[ $X -eq 0 ] && echo -e "${green}${text}${normal}" || echo "# ${text}"
if [ $X -gt 0 ]; then
	OUTPUT=`emerge -pquDN ${SET}`
	if [ "${OUTPUT}" = "" ]; then
		echo "# Your system is already up to date"
		echo "100"
		exit 0
	else
		zenity --width=500 --question --title "Here are packages that need updates" --text "${OUTPUT}"
		if [ $? -eq 0 ]; then
			(
				sudo -A emerge -quDN ${SET} > /tmp/upgrade-portage.log &
				pid=$!

				while [[ $(pidof emerge) = $pid ]]
				do
					sleep 1
					tail -f -n 1 /var/log/emerge.log | sed 's/\(.*\)/# \1/'
				done
			) | zenity --progress --width=500 --title "Ugrading your system" --pulsate --text ""

		else exit 0
		fi
	fi

else
	[ $QUIET -eq 0 ] && QUIET='' || QUIET='q'
	[ $VERBOSE -eq 0 ] && VERBOSE='' || VERBOSE='v'
	emerge -a${QUIET}${VERBOSE}uDN ${SET}
fi

if [ $? -gt 0 ]; then
	text1="An error occurred on compilation time"
	text2=", please check logs for more information"
	[ $X -eq 0 ] && echo -e "${red}${text1}${normal}, ${text2}" || { echo "# <span color=\"red\">${text1}</span>${text2}"; echo "100"; }
	exit 3
fi

[ $X -gt 0 ] && { echo "# Your system is now up to date"; echo "100"; }
exit 0
